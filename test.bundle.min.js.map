{
  "version": 3,
  "sources": ["src/utils/alphabet.ts", "src/utils/index.ts", "src/keyboard/index.ts", "test.mjs"],
  "sourcesContent": ["export const chatAlphabet = \"!bpmwjqxynzDsrHNldtgkh45vF7BcfuaoeEAYL62T83V1i\"\n\nexport function getShidinnLetter(i: number, cas: number) {\n  return String.fromCharCode(0xe020 + i + ((i >> 4) << 5) + (cas << 4))\n}\n\nexport function shidinnLetterFromChat(chat: string, cas: number, altgr?: false | \"try\"): string\nexport function shidinnLetterFromChat(chat: string, cas: number, altgr: true): string | undefined\nexport function shidinnLetterFromChat(chat: string, cas: number, altgr?: boolean | \"try\") {\n  let i = -1\n  if (typeof altgr === \"boolean\" || altgr === \"try\") {\n    const upper = chat === \"1\" ? \"!\" : chat.toUpperCase()\n    const lower = chat.toLowerCase()\n    if (altgr && upper !== lower) i = chatAlphabet.indexOf(upper)\n    if (i === -1 && altgr !== true) i = chatAlphabet.indexOf(lower)\n  } else {\n    i = chatAlphabet.indexOf(chat)\n  }\n  if (i === -1) return\n  return getShidinnLetter(i, cas)\n}\n", "export * from \"./alphabet\"\n\n/** Asserts that value is not nullish and returns it. */\nexport function nn<T>(value: T, desc: string) {\n  if (value === undefined || value === null)\n    throw new TypeError(`${desc} appears to be ${value}`)\n  return value\n}\n\n/** Asserts that value is not nullish and returns it. */\nexport function nnm<T>(value: T, msg: string) {\n  if (value === undefined || value === null)\n    throw new TypeError(msg)\n  return value\n}\n\nexport class EventEmitter<M> {\n  eventListeners: {\n    type: keyof M\n    handler: (...args: unknown[]) => void\n  }[] = []\n  on<T extends keyof M>(type: T, handler: (...args: M[T] extends unknown[] ? M[T] : unknown[]) => void) {\n    this.eventListeners.push({ type, handler: handler as (...args: unknown[]) => void })\n  }\n  emit<T extends keyof M>(type: T, ...args: M[T] extends unknown[] ? M[T] : unknown[]) {\n    for (const listener of this.eventListeners) {\n      if (listener.type === type) listener.handler.apply(this, args)\n    }\n  }\n}\n\nexport function isPointInRect(rect: { left: number; top: number; right: number; bottom: number }, x: number, y: number) {\n  return x >= rect.left && x < rect.right && y >= rect.top && y < rect.bottom\n}\n", "import {\n  isPointInRect,\n  nn,\n  nnm,\n  EventEmitter,\n  shidinnLetterFromChat\n} from \"../utils\"\n\ndeclare const _KEYBOARD_HTML: string\ndeclare const _KEYBOARD_CSS: string\n\nconst minVisualFeedbackDur = 100\nconst altgrMaxDX = 20\nconst altgrMinDY = 30\nconst halfPi = Math.PI / 2\nconst altgrDownMaxYOffset = 50\nconst altgrUpMaxYOffset = 150\nconst tapMaxDur = 150\nconst consecTapMaxInterv = 250\nconst bkspRepeatDelay = 500\nconst bkspRepeatInterv = 100\n\n/**\n * Struct specifying the glyphs that a certain printable key may print under a certain layout.\n */\ninterface KeyDefinition {\n  default: string\n  altgr?: string //| string[]\n  toggleSymbol?: true\n}\n\nfunction getLtrLayouts() {\n  const lettersCA = [\n    [...\"12345678\"],\n    [...\"qwertyuiop\"],\n    [...\"asdfghjkl\"],\n    [...\"zxcvbnm\"],\n  ]\n  const layoutCases = [1, 0, 2]\n  const layouts: KeyDefinition[][][] = layoutCases.map(() => lettersCA.map(() => []))\n\n  lettersCA.forEach((line, lineIndex) => {\n    line.forEach((letr, letrIndex) => {\n      layoutCases.forEach((cas, layoutIndex) => {\n        const deft = shidinnLetterFromChat(letr, cas)\n        const altgr = shidinnLetterFromChat(letr, cas, true)\n\n        const def: KeyDefinition = { default: deft }\n        if (altgr) def.altgr = altgr\n        layouts[layoutIndex][lineIndex][letrIndex] = def\n      })\n    })\n  })\n\n  return layouts\n}\n\nfunction _makeLayout(def: ArrayLike<string | { default: string, altgr?: string, toggleSymbol?: boolean }>[]) {\n  return def.map(l => Array.from(l, c => typeof c === \"string\" ? { default: c[0], altgr: c[1] } : c)) as KeyDefinition[][]\n}\n\nconst symbolLayout = _makeLayout([\n  \"1234567890\",\n  [...\"\\u27e6\\u27e7:;()\",\"*\u00D7\",{default:\"$\",altgr:\"\u00A5\"},...\"&@\"],\n  [\"-\u2014\",\"/\u00F7\",...\"<>~\u201C\u201D\\\"\u00B7\"],\n  [...\".,?!\",{default:\"\u2019\",altgr:\"\u2018\",toggleSymbol:true}],\n])\nconst symbolLayout2 = _makeLayout([\n  [...\"\\ue001\\ue002\\ue003\\ue004\\ue005\\ue006\\ue007\\ue008\\ue009\",{default:\"\\ue00a\",altgr:\"\\ue00b\"}],\n  [...\"[]{}#%^\",\"+\u2212\",...\"=\\ue00c\"],\n  [...\"\\\\|\\u2039\\u203a\\u2662\\xab\\xbb\",{default:\"\\u21e7\",altgr:\"\\u21e9\"},\"`\"],\n  [...\".,?!\",{default:\"'\",toggleSymbol:true}],\n])\n\nfunction _isHTMLOrSVGElement(value: unknown): value is HTMLOrSVGElement {\n  return value instanceof HTMLElement || value instanceof SVGElement\n}\n\nfunction _querySelector<T extends Element = HTMLElement>(parent: ParentNode, selectors: string) {\n  return nnm(parent.querySelector<T>(selectors), `CSS selector '${selectors}' matched nothing`)\n}\n\nexport class Keyboard extends EventEmitter<{\n  \"reset\": [],\n  \"bkspdown\": [],\n  \"touchstart\": [],\n  \"touchout\": [],\n  \"printablekeytouch\": [],\n  \"printablekeypress\": [key: SlidableKey, altgr: boolean],\n  \"enterpress\": [],\n}> {\n  readonly $doc: Document\n  readonly $parent: HTMLElement\n  readonly $shadow: ShadowRoot\n  readonly $style: HTMLStyleElement\n  readonly $padding: HTMLElement\n  readonly $container: HTMLElement\n  readonly $body: HTMLElement\n\n  readonly printables: PrintableKeyArray\n  readonly shift: ShiftKey\n  readonly bksp: BkspKey\n  readonly enter: EnterKey\n  readonly symbol: SymbolKey\n  readonly symbolShift: SymbolShiftKey\n  readonly layouts: KeyDefinition[][][]\n  readonly symbolLayouts: KeyDefinition[][][]\n  readonly closeBtn: BarButton\n\n  $targetDoc: Document | null = null\n\n  get disposed() {\n    return this._disposed\n  }\n  private _disposed = false\n\n  constructor($doc?: Document) {\n    super()\n\n    $doc = $doc || document\n    this.$doc = $doc\n    this.$targetDoc = $doc\n\n    this.$container = $doc.createElement(\"div\")\n    this.$container.innerHTML = _KEYBOARD_HTML\n    this.$container.className = \"xdi8kbd-wrap\"\n    this.$container.hidden = true\n    this.$container.addEventListener(\"touchstart\", ev => {\n      ev.preventDefault()\n    })\n    this.$container.addEventListener(\"touchmove\", ev => {\n      ev.preventDefault()\n    })\n    this.$container.addEventListener(\"mousedown\", ev => {\n      if (ev.button === 0) ev.preventDefault()\n    })\n\n    this.$body = _querySelector(this.$container, \".xdi8kbd\")\n    this.printables = new PrintableKeyArray(this)\n    this.shift = new ShiftKey(_querySelector(this.$container, \".key-shift\"), this)\n    this.bksp = new BkspKey(_querySelector(this.$container, \".key-bksp\"), this)\n    this.enter = new EnterKey(_querySelector(this.$container, \".key-enter\"), this)\n    this.symbol = new SymbolKey(_querySelector(this.$container, \".key-symbol\"), this)\n    this.symbolShift = new SymbolShiftKey(_querySelector(this.$container, \".key-symbolshift\"), this)\n\n    this.layouts = getLtrLayouts()\n    this.symbolLayouts = [symbolLayout, symbolLayout2]\n\n    this.closeBtn = new BarButton(_querySelector(this.$container, \".bar-btn-close\"), this)\n    this.closeBtn.press = () => {\n      const $e = this.$doc?.activeElement\n      if (_isHTMLOrSVGElement($e)) $e.blur()\n    }\n    this.$parent = document.createElement(\"xdi8-ime-keyboard\")\n    document.documentElement.appendChild(this.$parent)\n\n    this.$style = $doc.createElement(\"style\")\n    this.$style.textContent = _KEYBOARD_CSS\n\n    this.$padding = $doc.createElement(\"div\")\n    this.$padding.className = \"xdi8kbd-pad\"\n\n    this.$shadow = this.$parent.attachShadow({ mode: \"open\" })\n    this.$shadow.appendChild(this.$style)\n    this.$shadow.appendChild(this.$container)\n    // $padding should follow $container for convenience of css\n    this.$shadow.appendChild(this.$padding)\n    //this.update()\n  }\n\n  show() {\n    this.$container.hidden = false\n    this.emit(\"reset\")\n    this.symbols = false\n    this.layoutIndex = 0\n    this.update()\n  }\n\n  hide() {\n    this.$container.hidden = true\n    this.$padding.style.height = \"0\"\n  }\n\n  docEventListeners: [type: string, listener: (this: Document, ev: unknown) => unknown, options?: boolean | AddEventListenerOptions][] = []\n  registerDocumentEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev: DocumentEventMap[K]) => unknown, options?: boolean | AddEventListenerOptions) {\n    this.docEventListeners.push([type, listener as (this: Document, ev: unknown) => unknown, options])\n    this.$doc.addEventListener(type, listener, options)\n  }\n\n  dispose() {\n    if (this._disposed) return\n    this.$parent.remove()\n    for (const args of this.docEventListeners) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      this.$doc.removeEventListener(...args as [any, any])\n    }\n    this.docEventListeners.length = 0\n    this._disposed = true\n    Object.freeze(this)\n  }\n\n  symbols = false\n  layoutIndex = 0\n\n  update() {\n    const layouts = this.symbols ? this.symbolLayouts : this.layouts\n    const layout = layouts[this.layoutIndex]\n\n    this.printables.update(layout)\n    this.$body.dataset.layout = `${this.symbols? \"symbol\" : \"\"}${this.layoutIndex}`\n    this.$padding.style.height = `${this.$container.getBoundingClientRect().height}px`\n  }\n\n  execute(action: string, arg?: string | undefined) {\n    this.$targetDoc?.execCommand(action, false, arg)\n  }\n}\n\nexport class Key {\n  private _pressTime: number\n  private _unpressHandle = 0\n\n  constructor(public $wrap: HTMLElement, public $body: HTMLElement & { Key?: Key }) {}\n\n  show() {\n    this.$wrap.hidden = false\n  }\n  hide() {\n    this.$wrap.hidden = true\n  }\n\n  getRect() {\n    return this.$wrap.getBoundingClientRect()\n  }\n\n  press() {\n    this._pressTime = Date.now()\n    this.$body.classList.add(\"pressed\")\n    clearTimeout(this._unpressHandle)\n  }\n  unpress(instant?: boolean) {\n    const dt = instant ? 0 : this._pressTime + minVisualFeedbackDur - Date.now()\n    if (dt > 0)\n      setTimeout(() => void this.$body.classList.remove(\"pressed\"), dt)\n    else this.$body.classList.remove(\"pressed\")\n  }\n}\n\nexport class DynamicKey extends Key {\n  constructor($mark: Element | CharacterData) {\n    const $doc = $mark.ownerDocument\n    super($doc.createElement(\"div\"), $doc.createElement(\"button\"))\n\n    this.$wrap.className = \"key-wrap\"\n    this.$body.className = \"key\"\n    this.$body.Key = this\n    this.$wrap.appendChild(this.$body)\n  }\n}\n\nexport type SlidableKey = Key & { def: KeyDefinition }\n\n/**\n * A key on the virtual keyboard that can be used to input a glyph.\n */\nexport class PrintableKey extends DynamicKey {\n  $label: HTMLElement\n\n  constructor($mark: Element | CharacterData) {\n    super($mark)\n\n    this.$body.classList.add(\"key-printable\")\n    this.$label = this.$body.ownerDocument.createElement(\"div\")\n    this.$label.className = \"key-label\"\n    this.$body.appendChild(this.$label)\n\n    nn($mark.parentNode, \"$mark.parentNode\").insertBefore(this.$wrap, $mark)\n  }\n\n  def: KeyDefinition | null = null\n  update(def: KeyDefinition | null) {\n    this.def = def\n    if (!def) {\n      this.hide()\n      return\n    }\n    this.show()\n    this.$label.textContent = def.default\n  }\n}\n\n/** A faux touch identifier for mouse events. */\nexport const mouse = Symbol(\"mouse\")\nexport type TouchIdentifier = number | typeof mouse\n\n/**\n * A 2-dimensional array of `PrintableKey`s on the virtual keyboard.\n */\nexport class PrintableKeyArray {\n  $marks: Element[]\n  rows: PrintableKey[][]\n  space: SpaceKey\n  slidables: SlidableKey[]\n  balloon: Balloon\n  touchId: TouchIdentifier | null = null\n  slid: boolean = false\n  startY: number\n  altgr: boolean = false\n  activeKey: SlidableKey | null = null\n\n  constructor(public kbd: Keyboard) {\n    this.$marks = [...kbd.$container.querySelectorAll(\".key-insertionmark\")]\n    this.rows = this.$marks.map(() => [])\n    this.space = new SpaceKey(_querySelector(kbd.$container, \".key-space\"))\n    this.slidables = [this.space]\n\n    this.balloon = new Balloon(_querySelector(kbd.$container, \".balloon\"), this)\n\n    kbd.$body.addEventListener(\"touchstart\", ev => {\n      for (const touch of ev.changedTouches)\n        this.down(touch.identifier, touch.clientX, touch.clientY)\n      //ev.preventDefault()\n    }, { capture: true, passive: false })\n    kbd.$body.addEventListener(\"touchmove\", ev => {\n      for (const touch of ev.changedTouches)\n        this.move(touch.identifier, touch.clientX, touch.clientY)\n      //ev.preventDefault()\n    }, { capture: true, passive: false })\n    kbd.$body.addEventListener(\"touchend\", ev => {\n      for (const touch of ev.changedTouches)\n        this.up(touch.identifier)\n    }, { capture: true, passive: false })\n    kbd.$body.addEventListener(\"touchcancel\", ev => {\n      for (const touch of ev.changedTouches)\n        this.cancel(touch.identifier)\n    }, true)\n    kbd.$body.addEventListener(\"mousedown\", ev => {\n      if (ev.button !== 0) return\n      this.down(mouse, ev.clientX, ev.clientY)\n      //ev.preventDefault()\n    }, true)\n    kbd.registerDocumentEventListener(\"mousemove\", ev => {\n      if (ev.button !== 0) return\n      this.move(mouse, ev.clientX, ev.clientY)\n    }, true)\n    kbd.registerDocumentEventListener(\"mouseup\", ev => {\n      if (ev.button !== 0) return\n      this.up(mouse)\n    }, true)\n\n    kbd.on(\"bkspdown\", () => {\n      this.touchId && this.cancel(this.touchId)\n    })\n    kbd.on(\"reset\", () => {\n      this.touchId && this.cancel(this.touchId)\n    })\n  }\n\n  down(id: TouchIdentifier, x: number, y: number) {\n    if (this.touchId) this.up(this.touchId)\n    this.touchId = id\n    this.slid = false\n    this.startY = y\n    this.altgr = false\n    this.kbd.emit(\"touchstart\")\n    return this.move(id, x, y)\n  }\n  move(id: TouchIdentifier, x: number, y: number) {\n    if (id !== this.touchId) return\n\n    const kbRect = this.kbd.$body.getBoundingClientRect()\n\n    let rect: DOMRect | null = null\n    if (this.activeKey) {\n      rect = this.activeKey.getRect()\n      if (\n        typeof this.activeKey.def.altgr === \"string\" &&\n        !this.slid &&\n        x >= rect.left - altgrMaxDX &&\n        x < rect.right + altgrMaxDX\n      ) {\n        const dy = y - this.startY\n        const altgr = Math.abs(dy) > altgrMinDY\n        this.altgr = altgr\n        let yOffset = 0\n        if (altgr) {\n          const k = (dy > 0 ? altgrDownMaxYOffset : altgrUpMaxYOffset) / halfPi\n          yOffset = Math.atan(dy / k) * k\n        }\n        this.balloon.update(rect, yOffset)\n        return\n      }\n    }\n\n    if (!isPointInRect(kbRect, x, y)) {\n      this.kbd.emit(\"touchout\")\n      return this.cancel(id)\n    }\n\n    if (rect && isPointInRect(rect, x, y)) return\n\n    const newActiveKey = this.slidables.find(key => {\n      if (key === this.activeKey) return\n      rect = key.getRect()\n      return isPointInRect(rect, x, y)\n    })\n    if (!newActiveKey) return\n\n    if (this.activeKey) {\n      this.activeKey.unpress(true)\n      this.slid = true\n      this.altgr = false\n    }\n    newActiveKey.press()\n    this.activeKey = newActiveKey\n    this.balloon.update()\n    this.kbd.emit(\"printablekeytouch\")\n  }\n  up(id: TouchIdentifier) {\n    if (id !== this.touchId) return\n    this.touchId = null\n    if (this.activeKey) {\n      const def = this.activeKey.def\n      const char = this.altgr ? def.altgr : def.default\n      this.kbd.execute(\"insertText\", char)\n      this.kbd.emit(\"printablekeypress\", this.activeKey, this.altgr)\n\n      this.activeKey.unpress()\n      this.balloon.hide()\n      this.activeKey = null\n    }\n  }\n  cancel(id: TouchIdentifier) {\n    if (id !== this.touchId) return\n    this.touchId = null\n    if (this.activeKey) {\n      this.activeKey.unpress(true)\n      this.activeKey = null\n      this.balloon.hide(true)\n    }\n  }\n  update(layout: KeyDefinition[][]) {\n    this.slidables.length = 0\n    this.slidables.push(this.space)\n\n    this.rows.forEach((row, rowIndex) => {\n      const rowDef = layout[rowIndex]\n      while (row.length < rowDef.length)\n        row.push(new PrintableKey(this.$marks[rowIndex]))\n      row.forEach((key, keyIndex) => {\n        key.update(rowDef[keyIndex])\n        // Non-slidable (i.e. disabled) prinable-keys are not pushed\n        if (keyIndex < rowDef.length) this.slidables.push(key as SlidableKey)\n      })\n    })\n  }\n}\n\nexport class Balloon {\n  private _showTime: number\n  private _hideHandle = 0\n\n  constructor(public $body: HTMLElement, public pka: PrintableKeyArray) {}\n\n  shown = false\n  show() {\n    this.shown = true\n    this._showTime = Date.now()\n    this.$body.hidden = false\n    clearTimeout(this._hideHandle)\n  }\n  hide(instant?: boolean) {\n    this.shown = false\n    const dt = instant ? 0 : this._showTime + minVisualFeedbackDur - Date.now()\n    if (dt > 0)\n      this._hideHandle = setTimeout(() => void(this.$body.hidden = true), dt)\n    else this.$body.hidden = true\n  }\n\n  update(rect?: DOMRect, yOffset = 0) {\n    if (!(this.pka.activeKey instanceof PrintableKey)) {\n      this.hide()\n      return\n    }\n\n    if (!rect) rect = this.pka.activeKey.getRect()\n    const def = this.pka.activeKey.def\n    const kbRect = this.pka.kbd.$container.getBoundingClientRect()\n\n    this.$body.textContent = this.pka.altgr ? def.altgr || \"\" : def.default\n    this.$body.style.left = `${rect.left + rect.width / 2 - kbRect.left}px`\n    this.$body.style.top = `${rect.top - kbRect.top + yOffset}px`\n    if (!this.shown) this.show()\n  }\n}\n\nexport class PreconstructedKey extends Key {\n  constructor($body: HTMLElement & { Key?: Key }) {\n    super(nn($body.parentElement, \"$body.parentElement\"), $body)\n    $body.Key = this\n  }\n}\n\nexport class SpaceKey extends PreconstructedKey implements SlidableKey {\n  def = { default: \" \" }\n}\n\nexport class SingletonKey extends PreconstructedKey {\n  constructor($body: HTMLElement, public kbd: Keyboard) {\n    super($body)\n\n    this.$wrap.addEventListener(\"touchstart\", ev => {\n      //ev.preventDefault()\n      if (this.pressed) return\n      this.down(ev)\n    }, { passive: false })\n    this.$wrap.addEventListener(\"touchend\", ev => {\n      if (!this.pressed) return\n      this.up(ev)\n    }, { passive: false })\n    this.$wrap.addEventListener(\"touchcancel\", ev => {\n      if (!this.pressed) return\n      this.cancel(ev)\n    })\n    this.$wrap.addEventListener(\"mousedown\", ev => {\n      if (ev.button !== 0 || this.pressed) return\n      this.down(ev)\n      //ev.preventDefault()\n    })\n    kbd.registerDocumentEventListener(\"mouseup\", ev => {\n      if (ev.button !== 0 || !this.pressed) return\n      this.up(ev)\n      //ev.preventDefault()\n    })\n\n    kbd.on(\"reset\", () => {\n      this.reset()\n    })\n  }\n\n  pressed = false\n\n  down(_ev?: TouchEvent | MouseEvent) {\n    this.pressed = true\n    this.press()\n  }\n  up(_ev?: TouchEvent | MouseEvent) {\n    this.pressed = false\n    this.unpress()\n  }\n  cancel(_ev?: TouchEvent | MouseEvent) {\n    this.pressed = false\n    this.unpress(true)\n  }\n  reset() {\n    this.pressed = false\n    this.unpress(true)\n  }\n}\n\nexport class ShiftKey extends SingletonKey {\n  constructor($body: HTMLElement, kbd: Keyboard) {\n    super($body, kbd)\n\n    kbd.on(\"printablekeypress\", () => {\n      if (kbd.symbols) return\n      this.otherKeyPressed = true\n      if (this.state !== 3 && !this.pressed) {\n        this.state = 0\n        this.update()\n      }\n    })\n  }\n\n  state = 0\n  pressed = false\n  downTime = -Infinity\n  upTime = -Infinity\n  otherKeyPressed = false\n  returning = false\n\n  getState() {\n    if (this.returning) return 1\n    return this.state\n  }\n\n  down(ev: TouchEvent | MouseEvent) {\n    this.pressed = true\n    this.otherKeyPressed = false\n\n    const time = ev.timeStamp\n\n    if (\n      this.state !== 3 &&\n      this.upTime - this.downTime <= tapMaxDur &&\n      time - this.upTime <= consecTapMaxInterv\n    ) {\n      this.state = this.state === 2 ? 3 : 2\n    } else if (this.state === 0) {\n      this.state = 1\n    } else {\n      this.returning = true\n    }\n\n    this.downTime = time\n    this.update()\n  }\n  up(ev: TouchEvent | MouseEvent) {\n    this.pressed = false\n\n    const time = ev.timeStamp\n\n    if (this.returning || this.otherKeyPressed) {\n      this.returning = false\n      this.state = 0\n    }\n\n    this.upTime = time\n    this.update()\n  }\n  cancel() {\n    this.pressed = false\n\n    this.downTime = -Infinity\n    this.update()\n  }\n  reset() {\n    super.reset()\n    this.state = 0\n    this.downTime = -Infinity\n    this.upTime = -Infinity\n    this.returning = false\n    this.$body.dataset.state = String(0)\n  }\n\n  update() {\n    const state = this.getState()\n    this.$body.dataset.state = String(state)\n    this.kbd.layoutIndex = state === 3 ? 1 : state\n    this.kbd.update()\n  }\n}\n\nexport class BkspKey extends SingletonKey {\n  private tickHandle: number = 0\n\n  constructor($body: HTMLElement, kbd: Keyboard) {\n    super($body, kbd)\n\n    kbd.on(\"touchstart\", () => {\n      this.cancel()\n    })\n  }\n\n  tick() {\n    this.kbd.execute(\"delete\")\n    this.tickHandle = setTimeout(() => this.tick(), bkspRepeatInterv)\n  }\n\n  down() {\n    super.down()\n    this.kbd.emit(\"bkspdown\")\n    this.kbd.execute(\"delete\")\n    this.tickHandle = setTimeout(() => this.tick(), bkspRepeatDelay)\n  }\n  up() {\n    super.up()\n    clearTimeout(this.tickHandle)\n  }\n  cancel() {\n    super.cancel()\n    clearTimeout(this.tickHandle)\n  }\n}\n\nexport class EnterKey extends SingletonKey {\n  constructor($body: HTMLElement, kbd: Keyboard) {\n    super($body, kbd)\n\n    kbd.on(\"touchout\", () => {\n      this.cancel()\n    })\n    kbd.on(\"printablekeytouch\", () => {\n      this.cancel()\n    })\n  }\n\n  up() {\n    super.up()\n    this.kbd.execute(\"insertText\", \"\\n\")\n    this.kbd.emit(\"enterpress\")\n  }\n}\n\nexport abstract class BaseSymbolKey extends SingletonKey {\n  readonly offText: string\n  readonly onText: string\n  readonly $label: HTMLElement\n\n  constructor($body: HTMLElement, kbd: Keyboard) {\n    super($body, kbd)\n\n    this.$label = _querySelector(this.$body, \".key-label\")\n    this.$label.textContent = this.offText\n  }\n\n  down() {\n    this.toggle()\n  }\n  up() {}\n  cancel() {}\n  reset() {\n    this.$label.textContent = this.offText\n  }\n\n  abstract toggle(): void\n}\n\nexport class SymbolKey extends BaseSymbolKey {\n  readonly offText = \"\uE087\uE066\uE09D\uE09A\"\n  readonly onText = \"\uE05D\uE03E\uE095\uE043\uE093\"\n\n  constructor($body: HTMLElement, kbd: Keyboard) {\n    super($body, kbd)\n\n    kbd.on(\"printablekeypress\", (key) => {\n      if (!this.kbd.symbols) return\n      if (\n        key.def?.toggleSymbol ||\n        key instanceof SpaceKey && this.otherKeyPressed\n      )\n        this.toggle()\n      else this.otherKeyPressed = true\n    })\n    kbd.on(\"enterpress\", () => {\n      if (this.kbd.symbols && this.otherKeyPressed) this.toggle()\n    })\n  }\n\n  otherKeyPressed = false\n\n  down() {\n    this.otherKeyPressed = false\n    super.down()\n  }\n  reset() {\n    this.kbd.symbolShift.hide()\n    this.kbd.shift.show()\n    super.reset()\n  }\n\n  toggle() {\n    this.kbd.symbols = !this.kbd.symbols\n    this.kbd.layoutIndex = 0\n    this.kbd.emit(\"reset\")\n    if (this.kbd.symbols) {\n      this.kbd.shift.hide()\n      this.kbd.symbolShift.show()\n      this.$label.textContent = this.onText\n    }\n    this.kbd.update()\n  }\n}\n\nexport class SymbolShiftKey extends BaseSymbolKey {\n  readonly offText = \"#+=\"\n  readonly onText = \"123\"\n\n  toggle() {\n    this.kbd.layoutIndex = +!this.kbd.layoutIndex\n    this.kbd.update()\n    this.$label.textContent = this.kbd.layoutIndex ? this.onText : this.offText\n  }\n}\n\nexport class BarButton {\n  pressed = false\n  constructor(public $body: HTMLElement, public kbd: Keyboard) {\n    $body.addEventListener(\"touchstart\", () => {\n      this.pressed = true\n    })\n    $body.addEventListener(\"touchend\", () => {\n      if (this.pressed) this.press()\n      this.pressed = false\n    })\n    $body.addEventListener(\"mousedown\", ev => {\n      if (ev.button !== 0) return\n      this.pressed = true\n    })\n    $body.addEventListener(\"mouseup\", ev => {\n      if (ev.button !== 0) return\n      if (this.pressed) this.press()\n      this.pressed = false\n    })\n    kbd.registerDocumentEventListener(\"mouseup\", ev => {\n      if (ev.button !== 0) return\n      this.pressed = false\n    })\n  }\n\n  press() {}\n}\n", "import { Keyboard } from \"./src/keyboard\"\n\nvar kbd = window.kbd = new Keyboard(document)\nkbd.show()\n"],
  "mappings": "MAAO,IAAMA,EAAe,iDAErB,SAASC,EAAiBC,EAAWC,EAAa,CACvD,OAAO,OAAO,aAAa,MAASD,GAAMA,GAAK,GAAM,IAAMC,GAAO,EAAE,CACtE,CAIO,SAASC,EAAsBC,EAAcF,EAAaG,EAAyB,CACxF,IAAIJ,EAAI,GACR,GAAI,OAAOI,GAAU,WAAaA,IAAU,MAAO,CACjD,IAAMC,EAAQF,IAAS,IAAM,IAAMA,EAAK,YAAY,EAC9CG,EAAQH,EAAK,YAAY,EAC3BC,GAASC,IAAUC,IAAON,EAAIF,EAAa,QAAQO,CAAK,GACxDL,IAAM,IAAMI,IAAU,KAAMJ,EAAIF,EAAa,QAAQQ,CAAK,EAChE,MACEN,EAAIF,EAAa,QAAQK,CAAI,EAE/B,GAAIH,IAAM,GACV,OAAOD,EAAiBC,EAAGC,CAAG,CAChC,CCjBO,SAASM,EAAMC,EAAUC,EAAc,CAC5C,GAA2BD,GAAU,KACnC,MAAM,IAAI,UAAU,GAAGC,CAAI,kBAAkBD,CAAK,EAAE,EACtD,OAAOA,CACT,CAGO,SAASE,EAAOF,EAAUG,EAAa,CAC5C,GAA2BH,GAAU,KACnC,MAAM,IAAI,UAAUG,CAAG,EACzB,OAAOH,CACT,CAEO,IAAMI,EAAN,KAAsB,CAAtB,cACL,oBAGM,CAAC,EACP,GAAsBC,EAASC,EAAuE,CACpG,KAAK,eAAe,KAAK,CAAE,KAAAD,EAAM,QAASC,CAAwC,CAAC,CACrF,CACA,KAAwBD,KAAYE,EAAiD,CACnF,QAAWC,KAAY,KAAK,eACtBA,EAAS,OAASH,GAAMG,EAAS,QAAQ,MAAM,KAAMD,CAAI,CAEjE,CACF,EAEO,SAASE,EAAcC,EAAoEC,EAAWC,EAAW,CACtH,OAAOD,GAAKD,EAAK,MAAQC,EAAID,EAAK,OAASE,GAAKF,EAAK,KAAOE,EAAIF,EAAK,MACvE,CCtBA,IAAMG,EAAuB,IACvBC,EAAa,GACbC,EAAa,GACbC,EAAS,KAAK,GAAK,EACnBC,EAAsB,GACtBC,EAAoB,IACpBC,EAAY,IACZC,EAAqB,IACrBC,EAAkB,IAClBC,EAAmB,IAWzB,SAASC,GAAgB,CACvB,IAAMC,EAAY,CAChB,CAAC,GAAG,UAAU,EACd,CAAC,GAAG,YAAY,EAChB,CAAC,GAAG,WAAW,EACf,CAAC,GAAG,SAAS,CACf,EACMC,EAAc,CAAC,EAAG,EAAG,CAAC,EACtBC,EAA+BD,EAAY,IAAI,IAAMD,EAAU,IAAI,IAAM,CAAC,CAAC,CAAC,EAElF,OAAAA,EAAU,QAAQ,CAACG,EAAMC,IAAc,CACrCD,EAAK,QAAQ,CAACE,EAAMC,IAAc,CAChCL,EAAY,QAAQ,CAACM,EAAKC,IAAgB,CACxC,IAAMC,EAAOC,EAAsBL,EAAME,CAAG,EACtCI,EAAQD,EAAsBL,EAAME,EAAK,EAAI,EAE7CK,EAAqB,CAAE,QAASH,CAAK,EACvCE,IAAOC,EAAI,MAAQD,GACvBT,EAAQM,CAAW,EAAEJ,CAAS,EAAEE,CAAS,EAAIM,CAC/C,CAAC,CACH,CAAC,CACH,CAAC,EAEMV,CACT,CAEA,SAASW,EAAYD,EAAwF,CAC3G,OAAOA,EAAI,IAAIE,GAAK,MAAM,KAAKA,EAAGC,GAAK,OAAOA,GAAM,SAAW,CAAE,QAASA,EAAE,CAAC,EAAG,MAAOA,EAAE,CAAC,CAAE,EAAIA,CAAC,CAAC,CACpG,CAEA,IAAMC,EAAeH,EAAY,CAC/B,aACA,CAAC,GAAG,mBAAmB,QAAK,CAAC,QAAQ,IAAI,MAAM,MAAG,EAAE,GAAG,IAAI,EAC3D,CAAC,UAAK,QAAK,GAAG,sBAAU,EACxB,CAAC,GAAG,OAAO,CAAC,QAAQ,SAAI,MAAM,SAAI,aAAa,EAAI,CAAC,CACtD,CAAC,EACKI,EAAgBJ,EAAY,CAChC,CAAC,GAAG,yDAAyD,CAAC,QAAQ,SAAS,MAAM,QAAQ,CAAC,EAC9F,CAAC,GAAG,UAAU,UAAK,GAAG,SAAS,EAC/B,CAAC,GAAG,gCAAgC,CAAC,QAAQ,SAAS,MAAM,QAAQ,EAAE,GAAG,EACzE,CAAC,GAAG,OAAO,CAAC,QAAQ,IAAI,aAAa,EAAI,CAAC,CAC5C,CAAC,EAED,SAASK,EAAoBC,EAA2C,CACtE,OAAOA,aAAiB,aAAeA,aAAiB,UAC1D,CAEA,SAASC,EAAgDC,EAAoBC,EAAmB,CAC9F,OAAOC,EAAIF,EAAO,cAAiBC,CAAS,EAAG,iBAAiBA,CAAS,mBAAmB,CAC9F,CAEO,IAAME,EAAN,cAAuBC,CAQ3B,CA0BD,YAAYC,EAAiB,CAC3B,MAAM,EARR,gBAA8B,KAK9B,KAAQ,UAAY,GAqEpB,uBAAuI,CAAC,EAkBxI,aAAU,GACV,iBAAc,EAnFZA,EAAOA,GAAQ,SACf,KAAK,KAAOA,EACZ,KAAK,WAAaA,EAElB,KAAK,WAAaA,EAAK,cAAc,KAAK,EAC1C,KAAK,WAAW,UAAY,6qGAC5B,KAAK,WAAW,UAAY,eAC5B,KAAK,WAAW,OAAS,GACzB,KAAK,WAAW,iBAAiB,aAAcC,GAAM,CACnDA,EAAG,eAAe,CACpB,CAAC,EACD,KAAK,WAAW,iBAAiB,YAAaA,GAAM,CAClDA,EAAG,eAAe,CACpB,CAAC,EACD,KAAK,WAAW,iBAAiB,YAAaA,GAAM,CAC9CA,EAAG,SAAW,GAAGA,EAAG,eAAe,CACzC,CAAC,EAED,KAAK,MAAQP,EAAe,KAAK,WAAY,UAAU,EACvD,KAAK,WAAa,IAAIQ,EAAkB,IAAI,EAC5C,KAAK,MAAQ,IAAIC,EAAST,EAAe,KAAK,WAAY,YAAY,EAAG,IAAI,EAC7E,KAAK,KAAO,IAAIU,EAAQV,EAAe,KAAK,WAAY,WAAW,EAAG,IAAI,EAC1E,KAAK,MAAQ,IAAIW,EAASX,EAAe,KAAK,WAAY,YAAY,EAAG,IAAI,EAC7E,KAAK,OAAS,IAAIY,EAAUZ,EAAe,KAAK,WAAY,aAAa,EAAG,IAAI,EAChF,KAAK,YAAc,IAAIa,EAAeb,EAAe,KAAK,WAAY,kBAAkB,EAAG,IAAI,EAE/F,KAAK,QAAUrB,EAAc,EAC7B,KAAK,cAAgB,CAACiB,EAAcC,CAAa,EAEjD,KAAK,SAAW,IAAIiB,EAAUd,EAAe,KAAK,WAAY,gBAAgB,EAAG,IAAI,EACrF,KAAK,SAAS,MAAQ,IAAM,CArJhC,IAAAe,EAsJM,IAAMC,GAAKD,EAAA,KAAK,OAAL,YAAAA,EAAW,cAClBjB,EAAoBkB,CAAE,GAAGA,EAAG,KAAK,CACvC,EACA,KAAK,QAAU,SAAS,cAAc,mBAAmB,EACzD,SAAS,gBAAgB,YAAY,KAAK,OAAO,EAEjD,KAAK,OAASV,EAAK,cAAc,OAAO,EACxC,KAAK,OAAO,YAAc;AAAA;AAAA,EAE1B,KAAK,SAAWA,EAAK,cAAc,KAAK,EACxC,KAAK,SAAS,UAAY,cAE1B,KAAK,QAAU,KAAK,QAAQ,aAAa,CAAE,KAAM,MAAO,CAAC,EACzD,KAAK,QAAQ,YAAY,KAAK,MAAM,EACpC,KAAK,QAAQ,YAAY,KAAK,UAAU,EAExC,KAAK,QAAQ,YAAY,KAAK,QAAQ,CAExC,CAzDA,IAAI,UAAW,CACb,OAAO,KAAK,SACd,CAyDA,MAAO,CACL,KAAK,WAAW,OAAS,GACzB,KAAK,KAAK,OAAO,EACjB,KAAK,QAAU,GACf,KAAK,YAAc,EACnB,KAAK,OAAO,CACd,CAEA,MAAO,CACL,KAAK,WAAW,OAAS,GACzB,KAAK,SAAS,MAAM,OAAS,GAC/B,CAGA,8BAAgEW,EAASC,EAAgEC,EAA6C,CACpL,KAAK,kBAAkB,KAAK,CAACF,EAAMC,EAAsDC,CAAO,CAAC,EACjG,KAAK,KAAK,iBAAiBF,EAAMC,EAAUC,CAAO,CACpD,CAEA,SAAU,CACR,GAAI,MAAK,UACT,MAAK,QAAQ,OAAO,EACpB,QAAWC,KAAQ,KAAK,kBAEtB,KAAK,KAAK,oBAAoB,GAAGA,CAAkB,EAErD,KAAK,kBAAkB,OAAS,EAChC,KAAK,UAAY,GACjB,OAAO,OAAO,IAAI,EACpB,CAKA,QAAS,CAEP,IAAMC,GADU,KAAK,QAAU,KAAK,cAAgB,KAAK,SAClC,KAAK,WAAW,EAEvC,KAAK,WAAW,OAAOA,CAAM,EAC7B,KAAK,MAAM,QAAQ,OAAS,GAAG,KAAK,QAAS,SAAW,EAAE,GAAG,KAAK,WAAW,GAC7E,KAAK,SAAS,MAAM,OAAS,GAAG,KAAK,WAAW,sBAAsB,EAAE,MAAM,IAChF,CAEA,QAAQC,EAAgBC,EAA0B,CArNpD,IAAAR,GAsNIA,EAAA,KAAK,aAAL,MAAAA,EAAiB,YAAYO,EAAQ,GAAOC,EAC9C,CACF,EAEaC,EAAN,KAAU,CAIf,YAAmBC,EAA2BC,EAAoC,CAA/D,WAAAD,EAA2B,WAAAC,EAF9C,KAAQ,eAAiB,CAE0D,CAEnF,MAAO,CACL,KAAK,MAAM,OAAS,EACtB,CACA,MAAO,CACL,KAAK,MAAM,OAAS,EACtB,CAEA,SAAU,CACR,OAAO,KAAK,MAAM,sBAAsB,CAC1C,CAEA,OAAQ,CACN,KAAK,WAAa,KAAK,IAAI,EAC3B,KAAK,MAAM,UAAU,IAAI,SAAS,EAClC,aAAa,KAAK,cAAc,CAClC,CACA,QAAQC,EAAmB,CACzB,IAAMC,EAAKD,EAAU,EAAI,KAAK,WAAa1D,EAAuB,KAAK,IAAI,EACvE2D,EAAK,EACP,WAAW,IAAM,KAAK,KAAK,MAAM,UAAU,OAAO,SAAS,EAAGA,CAAE,EAC7D,KAAK,MAAM,UAAU,OAAO,SAAS,CAC5C,CACF,EAEaC,EAAN,cAAyBL,CAAI,CAClC,YAAYM,EAAgC,CAC1C,IAAMxB,EAAOwB,EAAM,cACnB,MAAMxB,EAAK,cAAc,KAAK,EAAGA,EAAK,cAAc,QAAQ,CAAC,EAE7D,KAAK,MAAM,UAAY,WACvB,KAAK,MAAM,UAAY,MACvB,KAAK,MAAM,IAAM,KACjB,KAAK,MAAM,YAAY,KAAK,KAAK,CACnC,CACF,EAOayB,EAAN,cAA2BF,CAAW,CAG3C,YAAYC,EAAgC,CAC1C,MAAMA,CAAK,EAUb,SAA4B,KAR1B,KAAK,MAAM,UAAU,IAAI,eAAe,EACxC,KAAK,OAAS,KAAK,MAAM,cAAc,cAAc,KAAK,EAC1D,KAAK,OAAO,UAAY,YACxB,KAAK,MAAM,YAAY,KAAK,MAAM,EAElCE,EAAGF,EAAM,WAAY,kBAAkB,EAAE,aAAa,KAAK,MAAOA,CAAK,CACzE,CAGA,OAAOtC,EAA2B,CAEhC,GADA,KAAK,IAAMA,EACP,CAACA,EAAK,CACR,KAAK,KAAK,EACV,MACF,CACA,KAAK,KAAK,EACV,KAAK,OAAO,YAAcA,EAAI,OAChC,CACF,EAGayC,EAAQ,OAAO,OAAO,EAMtBzB,EAAN,KAAwB,CAY7B,YAAmB0B,EAAe,CAAf,SAAAA,EANnB,aAAkC,KAClC,UAAgB,GAEhB,WAAiB,GACjB,eAAgC,KAG9B,KAAK,OAAS,CAAC,GAAGA,EAAI,WAAW,iBAAiB,oBAAoB,CAAC,EACvE,KAAK,KAAO,KAAK,OAAO,IAAI,IAAM,CAAC,CAAC,EACpC,KAAK,MAAQ,IAAIC,EAASnC,EAAekC,EAAI,WAAY,YAAY,CAAC,EACtE,KAAK,UAAY,CAAC,KAAK,KAAK,EAE5B,KAAK,QAAU,IAAIE,EAAQpC,EAAekC,EAAI,WAAY,UAAU,EAAG,IAAI,EAE3EA,EAAI,MAAM,iBAAiB,aAAc3B,GAAM,CAC7C,QAAW8B,KAAS9B,EAAG,eACrB,KAAK,KAAK8B,EAAM,WAAYA,EAAM,QAASA,EAAM,OAAO,CAE5D,EAAG,CAAE,QAAS,GAAM,QAAS,EAAM,CAAC,EACpCH,EAAI,MAAM,iBAAiB,YAAa3B,GAAM,CAC5C,QAAW8B,KAAS9B,EAAG,eACrB,KAAK,KAAK8B,EAAM,WAAYA,EAAM,QAASA,EAAM,OAAO,CAE5D,EAAG,CAAE,QAAS,GAAM,QAAS,EAAM,CAAC,EACpCH,EAAI,MAAM,iBAAiB,WAAY3B,GAAM,CAC3C,QAAW8B,KAAS9B,EAAG,eACrB,KAAK,GAAG8B,EAAM,UAAU,CAC5B,EAAG,CAAE,QAAS,GAAM,QAAS,EAAM,CAAC,EACpCH,EAAI,MAAM,iBAAiB,cAAe3B,GAAM,CAC9C,QAAW8B,KAAS9B,EAAG,eACrB,KAAK,OAAO8B,EAAM,UAAU,CAChC,EAAG,EAAI,EACPH,EAAI,MAAM,iBAAiB,YAAa3B,GAAM,CACxCA,EAAG,SAAW,GAClB,KAAK,KAAK0B,EAAO1B,EAAG,QAASA,EAAG,OAAO,CAEzC,EAAG,EAAI,EACP2B,EAAI,8BAA8B,YAAa3B,GAAM,CAC/CA,EAAG,SAAW,GAClB,KAAK,KAAK0B,EAAO1B,EAAG,QAASA,EAAG,OAAO,CACzC,EAAG,EAAI,EACP2B,EAAI,8BAA8B,UAAW3B,GAAM,CAC7CA,EAAG,SAAW,GAClB,KAAK,GAAG0B,CAAK,CACf,EAAG,EAAI,EAEPC,EAAI,GAAG,WAAY,IAAM,CACvB,KAAK,SAAW,KAAK,OAAO,KAAK,OAAO,CAC1C,CAAC,EACDA,EAAI,GAAG,QAAS,IAAM,CACpB,KAAK,SAAW,KAAK,OAAO,KAAK,OAAO,CAC1C,CAAC,CACH,CAEA,KAAKI,EAAqBC,EAAWC,EAAW,CAC9C,OAAI,KAAK,SAAS,KAAK,GAAG,KAAK,OAAO,EACtC,KAAK,QAAUF,EACf,KAAK,KAAO,GACZ,KAAK,OAASE,EACd,KAAK,MAAQ,GACb,KAAK,IAAI,KAAK,YAAY,EACnB,KAAK,KAAKF,EAAIC,EAAGC,CAAC,CAC3B,CACA,KAAKF,EAAqBC,EAAWC,EAAW,CAC9C,GAAIF,IAAO,KAAK,QAAS,OAEzB,IAAMG,EAAS,KAAK,IAAI,MAAM,sBAAsB,EAEhDC,EAAuB,KAC3B,GAAI,KAAK,YACPA,EAAO,KAAK,UAAU,QAAQ,EAE5B,OAAO,KAAK,UAAU,IAAI,OAAU,UACpC,CAAC,KAAK,MACNH,GAAKG,EAAK,KAAOxE,GACjBqE,EAAIG,EAAK,MAAQxE,GACjB,CACA,IAAMyE,EAAKH,EAAI,KAAK,OACdjD,EAAQ,KAAK,IAAIoD,CAAE,EAAIxE,EAC7B,KAAK,MAAQoB,EACb,IAAIqD,EAAU,EACd,GAAIrD,EAAO,CACT,IAAMsD,GAAKF,EAAK,EAAItE,EAAsBC,GAAqBF,EAC/DwE,EAAU,KAAK,KAAKD,EAAKE,CAAC,EAAIA,CAChC,CACA,KAAK,QAAQ,OAAOH,EAAME,CAAO,EACjC,MACF,CAGF,GAAI,CAACE,EAAcL,EAAQF,EAAGC,CAAC,EAC7B,YAAK,IAAI,KAAK,UAAU,EACjB,KAAK,OAAOF,CAAE,EAGvB,GAAII,GAAQI,EAAcJ,EAAMH,EAAGC,CAAC,EAAG,OAEvC,IAAMO,EAAe,KAAK,UAAU,KAAKC,GAAO,CAC9C,GAAIA,IAAQ,KAAK,UACjB,OAAAN,EAAOM,EAAI,QAAQ,EACZF,EAAcJ,EAAMH,EAAGC,CAAC,CACjC,CAAC,EACIO,IAED,KAAK,YACP,KAAK,UAAU,QAAQ,EAAI,EAC3B,KAAK,KAAO,GACZ,KAAK,MAAQ,IAEfA,EAAa,MAAM,EACnB,KAAK,UAAYA,EACjB,KAAK,QAAQ,OAAO,EACpB,KAAK,IAAI,KAAK,mBAAmB,EACnC,CACA,GAAGT,EAAqB,CACtB,GAAIA,IAAO,KAAK,UAChB,KAAK,QAAU,KACX,KAAK,WAAW,CAClB,IAAM9C,EAAM,KAAK,UAAU,IACrByD,EAAO,KAAK,MAAQzD,EAAI,MAAQA,EAAI,QAC1C,KAAK,IAAI,QAAQ,aAAcyD,CAAI,EACnC,KAAK,IAAI,KAAK,oBAAqB,KAAK,UAAW,KAAK,KAAK,EAE7D,KAAK,UAAU,QAAQ,EACvB,KAAK,QAAQ,KAAK,EAClB,KAAK,UAAY,IACnB,CACF,CACA,OAAOX,EAAqB,CACtBA,IAAO,KAAK,UAChB,KAAK,QAAU,KACX,KAAK,YACP,KAAK,UAAU,QAAQ,EAAI,EAC3B,KAAK,UAAY,KACjB,KAAK,QAAQ,KAAK,EAAI,GAE1B,CACA,OAAOjB,EAA2B,CAChC,KAAK,UAAU,OAAS,EACxB,KAAK,UAAU,KAAK,KAAK,KAAK,EAE9B,KAAK,KAAK,QAAQ,CAAC6B,EAAKC,IAAa,CACnC,IAAMC,EAAS/B,EAAO8B,CAAQ,EAC9B,KAAOD,EAAI,OAASE,EAAO,QACzBF,EAAI,KAAK,IAAInB,EAAa,KAAK,OAAOoB,CAAQ,CAAC,CAAC,EAClDD,EAAI,QAAQ,CAACF,EAAKK,IAAa,CAC7BL,EAAI,OAAOI,EAAOC,CAAQ,CAAC,EAEvBA,EAAWD,EAAO,QAAQ,KAAK,UAAU,KAAKJ,CAAkB,CACtE,CAAC,CACH,CAAC,CACH,CACF,EAEaZ,EAAN,KAAc,CAInB,YAAmBV,EAA2B4B,EAAwB,CAAnD,WAAA5B,EAA2B,SAAA4B,EAF9C,KAAQ,YAAc,EAItB,WAAQ,EAF+D,CAGvE,MAAO,CACL,KAAK,MAAQ,GACb,KAAK,UAAY,KAAK,IAAI,EAC1B,KAAK,MAAM,OAAS,GACpB,aAAa,KAAK,WAAW,CAC/B,CACA,KAAK3B,EAAmB,CACtB,KAAK,MAAQ,GACb,IAAMC,EAAKD,EAAU,EAAI,KAAK,UAAY1D,EAAuB,KAAK,IAAI,EACtE2D,EAAK,EACP,KAAK,YAAc,WAAW,IAAM,KAAK,KAAK,MAAM,OAAS,IAAOA,CAAE,EACnE,KAAK,MAAM,OAAS,EAC3B,CAEA,OAAOc,EAAgBE,EAAU,EAAG,CAClC,GAAI,EAAE,KAAK,IAAI,qBAAqBb,GAAe,CACjD,KAAK,KAAK,EACV,MACF,CAEKW,IAAMA,EAAO,KAAK,IAAI,UAAU,QAAQ,GAC7C,IAAMlD,EAAM,KAAK,IAAI,UAAU,IACzBiD,EAAS,KAAK,IAAI,IAAI,WAAW,sBAAsB,EAE7D,KAAK,MAAM,YAAc,KAAK,IAAI,MAAQjD,EAAI,OAAS,GAAKA,EAAI,QAChE,KAAK,MAAM,MAAM,KAAO,GAAGkD,EAAK,KAAOA,EAAK,MAAQ,EAAID,EAAO,IAAI,KACnE,KAAK,MAAM,MAAM,IAAM,GAAGC,EAAK,IAAMD,EAAO,IAAMG,CAAO,KACpD,KAAK,OAAO,KAAK,KAAK,CAC7B,CACF,EAEaW,EAAN,cAAgC/B,CAAI,CACzC,YAAYE,EAAoC,CAC9C,MAAMM,EAAGN,EAAM,cAAe,qBAAqB,EAAGA,CAAK,EAC3DA,EAAM,IAAM,IACd,CACF,EAEaS,EAAN,cAAuBoB,CAAyC,CAAhE,kCACL,SAAM,CAAE,QAAS,GAAI,EACvB,EAEaC,EAAN,cAA2BD,CAAkB,CAClD,YAAY7B,EAA2BQ,EAAe,CACpD,MAAMR,CAAK,EAD0B,SAAAQ,EAgCvC,aAAU,GA7BR,KAAK,MAAM,iBAAiB,aAAc3B,GAAM,CAE1C,KAAK,SACT,KAAK,KAAKA,CAAE,CACd,EAAG,CAAE,QAAS,EAAM,CAAC,EACrB,KAAK,MAAM,iBAAiB,WAAYA,GAAM,CACvC,KAAK,SACV,KAAK,GAAGA,CAAE,CACZ,EAAG,CAAE,QAAS,EAAM,CAAC,EACrB,KAAK,MAAM,iBAAiB,cAAeA,GAAM,CAC1C,KAAK,SACV,KAAK,OAAOA,CAAE,CAChB,CAAC,EACD,KAAK,MAAM,iBAAiB,YAAaA,GAAM,CACzCA,EAAG,SAAW,GAAK,KAAK,SAC5B,KAAK,KAAKA,CAAE,CAEd,CAAC,EACD2B,EAAI,8BAA8B,UAAW3B,GAAM,CAC7CA,EAAG,SAAW,GAAK,CAAC,KAAK,SAC7B,KAAK,GAAGA,CAAE,CAEZ,CAAC,EAED2B,EAAI,GAAG,QAAS,IAAM,CACpB,KAAK,MAAM,CACb,CAAC,CACH,CAIA,KAAKuB,EAA+B,CAClC,KAAK,QAAU,GACf,KAAK,MAAM,CACb,CACA,GAAGA,EAA+B,CAChC,KAAK,QAAU,GACf,KAAK,QAAQ,CACf,CACA,OAAOA,EAA+B,CACpC,KAAK,QAAU,GACf,KAAK,QAAQ,EAAI,CACnB,CACA,OAAQ,CACN,KAAK,QAAU,GACf,KAAK,QAAQ,EAAI,CACnB,CACF,EAEahD,EAAN,cAAuB+C,CAAa,CACzC,YAAY9B,EAAoBQ,EAAe,CAC7C,MAAMR,EAAOQ,CAAG,EAYlB,WAAQ,EACR,aAAU,GACV,cAAW,KACX,YAAS,KACT,qBAAkB,GAClB,eAAY,GAfVA,EAAI,GAAG,oBAAqB,IAAM,CAC5BA,EAAI,UACR,KAAK,gBAAkB,GACnB,KAAK,QAAU,GAAK,CAAC,KAAK,UAC5B,KAAK,MAAQ,EACb,KAAK,OAAO,GAEhB,CAAC,CACH,CASA,UAAW,CACT,OAAI,KAAK,UAAkB,EACpB,KAAK,KACd,CAEA,KAAK3B,EAA6B,CAChC,KAAK,QAAU,GACf,KAAK,gBAAkB,GAEvB,IAAMmD,EAAOnD,EAAG,UAGd,KAAK,QAAU,GACf,KAAK,OAAS,KAAK,UAAYhC,GAC/BmF,EAAO,KAAK,QAAUlF,EAEtB,KAAK,MAAQ,KAAK,QAAU,EAAI,EAAI,EAC3B,KAAK,QAAU,EACxB,KAAK,MAAQ,EAEb,KAAK,UAAY,GAGnB,KAAK,SAAWkF,EAChB,KAAK,OAAO,CACd,CACA,GAAGnD,EAA6B,CAC9B,KAAK,QAAU,GAEf,IAAMmD,EAAOnD,EAAG,WAEZ,KAAK,WAAa,KAAK,mBACzB,KAAK,UAAY,GACjB,KAAK,MAAQ,GAGf,KAAK,OAASmD,EACd,KAAK,OAAO,CACd,CACA,QAAS,CACP,KAAK,QAAU,GAEf,KAAK,SAAW,KAChB,KAAK,OAAO,CACd,CACA,OAAQ,CACN,MAAM,MAAM,EACZ,KAAK,MAAQ,EACb,KAAK,SAAW,KAChB,KAAK,OAAS,KACd,KAAK,UAAY,GACjB,KAAK,MAAM,QAAQ,MAAQ,OAAO,CAAC,CACrC,CAEA,QAAS,CACP,IAAMC,EAAQ,KAAK,SAAS,EAC5B,KAAK,MAAM,QAAQ,MAAQ,OAAOA,CAAK,EACvC,KAAK,IAAI,YAAcA,IAAU,EAAI,EAAIA,EACzC,KAAK,IAAI,OAAO,CAClB,CACF,EAEajD,EAAN,cAAsB8C,CAAa,CAGxC,YAAY9B,EAAoBQ,EAAe,CAC7C,MAAMR,EAAOQ,CAAG,EAHlB,KAAQ,WAAqB,EAK3BA,EAAI,GAAG,aAAc,IAAM,CACzB,KAAK,OAAO,CACd,CAAC,CACH,CAEA,MAAO,CACL,KAAK,IAAI,QAAQ,QAAQ,EACzB,KAAK,WAAa,WAAW,IAAM,KAAK,KAAK,EAAGxD,CAAgB,CAClE,CAEA,MAAO,CACL,MAAM,KAAK,EACX,KAAK,IAAI,KAAK,UAAU,EACxB,KAAK,IAAI,QAAQ,QAAQ,EACzB,KAAK,WAAa,WAAW,IAAM,KAAK,KAAK,EAAGD,CAAe,CACjE,CACA,IAAK,CACH,MAAM,GAAG,EACT,aAAa,KAAK,UAAU,CAC9B,CACA,QAAS,CACP,MAAM,OAAO,EACb,aAAa,KAAK,UAAU,CAC9B,CACF,EAEakC,EAAN,cAAuB6C,CAAa,CACzC,YAAY9B,EAAoBQ,EAAe,CAC7C,MAAMR,EAAOQ,CAAG,EAEhBA,EAAI,GAAG,WAAY,IAAM,CACvB,KAAK,OAAO,CACd,CAAC,EACDA,EAAI,GAAG,oBAAqB,IAAM,CAChC,KAAK,OAAO,CACd,CAAC,CACH,CAEA,IAAK,CACH,MAAM,GAAG,EACT,KAAK,IAAI,QAAQ,aAAc;AAAA,CAAI,EACnC,KAAK,IAAI,KAAK,YAAY,CAC5B,CACF,EAEsB0B,EAAf,cAAqCJ,CAAa,CAKvD,YAAY9B,EAAoBQ,EAAe,CAC7C,MAAMR,EAAOQ,CAAG,EAEhB,KAAK,OAASlC,EAAe,KAAK,MAAO,YAAY,EACrD,KAAK,OAAO,YAAc,KAAK,OACjC,CAEA,MAAO,CACL,KAAK,OAAO,CACd,CACA,IAAK,CAAC,CACN,QAAS,CAAC,CACV,OAAQ,CACN,KAAK,OAAO,YAAc,KAAK,OACjC,CAGF,EAEaY,EAAN,cAAwBgD,CAAc,CAI3C,YAAYlC,EAAoBQ,EAAe,CAC7C,MAAMR,EAAOQ,CAAG,EAJlB,KAAS,QAAU,2BACnB,KAAS,OAAS,iCAmBlB,qBAAkB,GAdhBA,EAAI,GAAG,oBAAsBc,GAAQ,CArtBzC,IAAAjC,EAstBW,KAAK,IAAI,WAEZA,EAAAiC,EAAI,MAAJ,MAAAjC,EAAS,cACTiC,aAAeb,GAAY,KAAK,gBAEhC,KAAK,OAAO,EACT,KAAK,gBAAkB,GAC9B,CAAC,EACDD,EAAI,GAAG,aAAc,IAAM,CACrB,KAAK,IAAI,SAAW,KAAK,iBAAiB,KAAK,OAAO,CAC5D,CAAC,CACH,CAIA,MAAO,CACL,KAAK,gBAAkB,GACvB,MAAM,KAAK,CACb,CACA,OAAQ,CACN,KAAK,IAAI,YAAY,KAAK,EAC1B,KAAK,IAAI,MAAM,KAAK,EACpB,MAAM,MAAM,CACd,CAEA,QAAS,CACP,KAAK,IAAI,QAAU,CAAC,KAAK,IAAI,QAC7B,KAAK,IAAI,YAAc,EACvB,KAAK,IAAI,KAAK,OAAO,EACjB,KAAK,IAAI,UACX,KAAK,IAAI,MAAM,KAAK,EACpB,KAAK,IAAI,YAAY,KAAK,EAC1B,KAAK,OAAO,YAAc,KAAK,QAEjC,KAAK,IAAI,OAAO,CAClB,CACF,EAEarB,EAAN,cAA6B+C,CAAc,CAA3C,kCACL,KAAS,QAAU,MACnB,KAAS,OAAS,MAElB,QAAS,CACP,KAAK,IAAI,YAAc,CAAC,CAAC,KAAK,IAAI,YAClC,KAAK,IAAI,OAAO,EAChB,KAAK,OAAO,YAAc,KAAK,IAAI,YAAc,KAAK,OAAS,KAAK,OACtE,CACF,EAEa9C,EAAN,KAAgB,CAErB,YAAmBY,EAA2BQ,EAAe,CAA1C,WAAAR,EAA2B,SAAAQ,EAD9C,aAAU,GAERR,EAAM,iBAAiB,aAAc,IAAM,CACzC,KAAK,QAAU,EACjB,CAAC,EACDA,EAAM,iBAAiB,WAAY,IAAM,CACnC,KAAK,SAAS,KAAK,MAAM,EAC7B,KAAK,QAAU,EACjB,CAAC,EACDA,EAAM,iBAAiB,YAAanB,GAAM,CACpCA,EAAG,SAAW,IAClB,KAAK,QAAU,GACjB,CAAC,EACDmB,EAAM,iBAAiB,UAAWnB,GAAM,CAClCA,EAAG,SAAW,IACd,KAAK,SAAS,KAAK,MAAM,EAC7B,KAAK,QAAU,GACjB,CAAC,EACD2B,EAAI,8BAA8B,UAAW3B,GAAM,CAC7CA,EAAG,SAAW,IAClB,KAAK,QAAU,GACjB,CAAC,CACH,CAEA,OAAQ,CAAC,CACX,EC/xBA,IAAIsD,EAAM,OAAO,IAAM,IAAIC,EAAS,QAAQ,EAC5CD,EAAI,KAAK",
  "names": ["chatAlphabet", "getShidinnLetter", "i", "cas", "shidinnLetterFromChat", "chat", "altgr", "upper", "lower", "nn", "value", "desc", "nnm", "msg", "EventEmitter", "type", "handler", "args", "listener", "isPointInRect", "rect", "x", "y", "minVisualFeedbackDur", "altgrMaxDX", "altgrMinDY", "halfPi", "altgrDownMaxYOffset", "altgrUpMaxYOffset", "tapMaxDur", "consecTapMaxInterv", "bkspRepeatDelay", "bkspRepeatInterv", "getLtrLayouts", "lettersCA", "layoutCases", "layouts", "line", "lineIndex", "letr", "letrIndex", "cas", "layoutIndex", "deft", "shidinnLetterFromChat", "altgr", "def", "_makeLayout", "l", "c", "symbolLayout", "symbolLayout2", "_isHTMLOrSVGElement", "value", "_querySelector", "parent", "selectors", "nnm", "Keyboard", "EventEmitter", "$doc", "ev", "PrintableKeyArray", "ShiftKey", "BkspKey", "EnterKey", "SymbolKey", "SymbolShiftKey", "BarButton", "_a", "$e", "type", "listener", "options", "args", "layout", "action", "arg", "Key", "$wrap", "$body", "instant", "dt", "DynamicKey", "$mark", "PrintableKey", "nn", "mouse", "kbd", "SpaceKey", "Balloon", "touch", "id", "x", "y", "kbRect", "rect", "dy", "yOffset", "k", "isPointInRect", "newActiveKey", "key", "char", "row", "rowIndex", "rowDef", "keyIndex", "pka", "PreconstructedKey", "SingletonKey", "_ev", "time", "state", "BaseSymbolKey", "kbd", "Keyboard"]
}
